{% comment %}
<!--Slick Slide CSS Links -->
<!-- Add the slick-theme.css if you want default styling -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>
<!-- Add the slick-theme.css if you want default styling -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css"/>
<!--Slick Slide JS Links -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>

<div class="custom-video-slider-cont">
  <div class="slider-heading-cont">
  <h1>{{ section.settings.heading }}</h1>
  <p>{{ section.settings.Description }}</p>
    </div>
  <div class="slider-vid">
    {% for block in section.blocks %}
      <div class="slide-url">
        <video src="{{ block.settings.video_url }}" controls></video>
      </div>
    {% endfor %}
  </div>
</div>

<style>
  .slider-heading-cont {
    text-align: center;
  }
  .custom-video-slider-cont {
    max-width: 100%;
    overflow: hidden;
        padding: 88px 50px;
    background: #F8EDE3;
  }

  .slider-vid {
    display: flex; 
    transition: transform 0.5s ease-in-out;
  }

  .slide-url {
    flex: 1 0 25%;
    padding: 10px;
  }

  video {
    width: 100%;
    height: auto;
    border-radius: 10px;
  }
  .slick-prev:before, .slick-next:before {
    color: black;
  }
</style>

<script>
$(document).ready(function(){
$('.slider-vid').slick({
  centerMode: true,
    arrows: true,
  dots: false,
  infinite: false,
  slidesToShow: 5,
  slidesToScroll: 1,

  responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 3,
        infinite: true,
        arrows: true
      }
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2
      }
    },
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1
      }
    }
    // You can unslick at a given breakpoint now by adding:
    // settings: "unslick"
    // instead of a settings object
  ]
});
  });
</script>
{% endcomment %}

{% comment %}
<script>
  let index = 0;

  function showNextSlide() {
    const slider = document.querySelector('.slider');
    const totalSlides = document.querySelectorAll('.slide').length;
    
    index++;
    if (index >= totalSlides) {
      index = 0;
    }

    slider.style.transform = 'translateX(' + (-index * 100) + '%)';
  }

/* setInterval(showNextSlide, 3000); // Change slide every 3 seconds */
</script>
{% endcomment %}


{% schema %}
{
  "name": "Dynamic Video Slider",
  "settings": [
    {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
       {
          "type": "text",
          "id": "Description",
          "label": "Description"
        }
  ],
  "blocks": [
    {
      "type": "video_block",
      "name": "Video Block",
      "settings": [
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Dynamic Video Slider",
      "category": "Custom"
    }
  ]
}
{% endschema %}
